{
    "openapi": "3.1.0",
    "info": {
        "title": "FastAPI",
        "version": "0.1.0"
    },
    "paths": {
        "/api/auth/me": {
            "get": {
                "tags": [
                    "auth"
                ],
                "summary": "Get Current User",
                "description": "Get current user information from Stack Auth token",
                "operationId": "get_current_user_api_auth_me_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Logout",
                "description": "Logout the current user (clear cache)",
                "operationId": "logout_api_auth_logout_post",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/verify": {
            "get": {
                "tags": [
                    "auth"
                ],
                "summary": "Verify Token",
                "description": "Verify if the provided token is valid",
                "operationId": "verify_token_api_auth_verify_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/account/me": {
            "get": {
                "tags": [
                    "account"
                ],
                "summary": "Get Account",
                "description": "Get current user account information",
                "operationId": "get_account_api_account_me_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/health/db": {
            "get": {
                "tags": [
                    "health"
                ],
                "summary": "Db",
                "operationId": "db_api_health_db_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/health/app": {
            "get": {
                "tags": [
                    "health"
                ],
                "summary": "App Health",
                "operationId": "app_health_api_health_app_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/spotify/search": {
            "get": {
                "tags": [
                    "spotify"
                ],
                "summary": "Search Tracks",
                "description": "Search for tracks using service account credentials",
                "operationId": "search_tracks_api_spotify_search_get",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Query"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TrackDetails"
                                    },
                                    "title": "Response Search Tracks Api Spotify Search Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/spotify/track/{track_id}": {
            "get": {
                "tags": [
                    "spotify"
                ],
                "summary": "Get Track",
                "description": "Get track details using service account credentials",
                "operationId": "get_track_api_spotify_track__track_id__get",
                "parameters": [
                    {
                        "name": "track_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Track Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrackDetails"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/mixtape": {
            "post": {
                "tags": [
                    "mixtape"
                ],
                "summary": "Create Mixtape",
                "description": "Creates a new mixtape (with tracks) using the provided public ID.\nIf user is authenticated, the mixtape will be associated with them. If not, it\nwill remain an anonymous mixtape.\nReturns the mixtape's public ID.\n\nArgs:\n    request: Mixtape creation request (includes client-provided public_id)\n    session: Database session\n    authenticated_user: Optional authenticated user\n    spotify_client: Spotify client for track validation\n\nRaises:\n    HTTPException 409: If the public ID is already taken",
                "operationId": "create_mixtape_api_mixtape_post",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MixtapeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MixtapeResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "mixtape"
                ],
                "summary": "List My Mixtapes",
                "description": "Lists all mixtapes owned by the current user, taking into account the specified query parameters.\nDoes not return the entire mixtape, just an overview.",
                "operationId": "list_my_mixtapes_api_mixtape_get",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Search mixtape titles (partial match)",
                            "title": "Q"
                        },
                        "description": "Search mixtape titles (partial match)"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "description": "Max results to return",
                            "default": 20,
                            "title": "Limit"
                        },
                        "description": "Max results to return"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Results offset for pagination",
                            "default": 0,
                            "title": "Offset"
                        },
                        "description": "Results offset for pagination"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MixtapeOverview"
                                    },
                                    "title": "Response List My Mixtapes Api Mixtape Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/mixtape/{public_id}/claim": {
            "post": {
                "tags": [
                    "mixtape"
                ],
                "summary": "Claim Mixtape",
                "description": "Claim an anonymous mixtape, making the authenticated user the owner.",
                "operationId": "claim_mixtape_api_mixtape__public_id__claim_post",
                "parameters": [
                    {
                        "name": "public_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Public Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MixtapeResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/mixtape/{public_id}": {
            "get": {
                "tags": [
                    "mixtape"
                ],
                "summary": "Get Mixtape",
                "description": "Gets the mixtape with the given public ID.",
                "operationId": "get_mixtape_api_mixtape__public_id__get",
                "parameters": [
                    {
                        "name": "public_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Public Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MixtapeResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "mixtape"
                ],
                "summary": "Update Mixtape",
                "description": "Updates the mixtape with the given ID.\nReturns the new mixtape version.\nTODO: rethink the return value.",
                "operationId": "update_mixtape_api_mixtape__public_id__put",
                "parameters": [
                    {
                        "name": "public_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Public Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MixtapeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MixtapeResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/mixtape/{public_id}/undo": {
            "post": {
                "tags": [
                    "mixtape"
                ],
                "summary": "Undo Mixtape",
                "description": "Undo the last action on a mixtape, restoring it to a previous version.\n\nThis endpoint implements undo functionality by:\n1. Loading the target version from the snapshot history\n2. Restoring the mixtape and tracks to that previous state\n3. Updating the undo/redo pointers to maintain the version chain\n4. Breaking the redo chain (since a new edit would create a new branch)\n\nThe undo operation follows the doubly-linked list structure stored in the\nmixtape_snapshot table, where each version points to its undo/redo targets.\n\nArgs:\n    public_id: The public identifier of the mixtape to undo\n    session: Database session with write access\n    authenticated_user: Optional authenticated user (required for private mixtapes)\n    spotify_client: Spotify client for enriching track details\n\nReturns:\n    MixtapeResponse: The restored mixtape with updated can_undo/can_redo flags\n\nRaises:\n    HTTPException 400: If the mixtape cannot be undone (no previous version)\n    HTTPException 401: If the mixtape is private and user lacks authorization\n    HTTPException 404: If the mixtape doesn't exist\n    HTTPException 500: If the target version snapshot cannot be found",
                "operationId": "undo_mixtape_api_mixtape__public_id__undo_post",
                "parameters": [
                    {
                        "name": "public_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Public Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MixtapeResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/mixtape/{public_id}/redo": {
            "post": {
                "tags": [
                    "mixtape"
                ],
                "summary": "Redo Mixtape",
                "description": "Redo the last undone action on a mixtape, restoring it to a later version.\n\nThis endpoint implements redo functionality by:\n1. Loading the target version from the snapshot history\n2. Restoring the mixtape and tracks to that later state\n3. Updating the undo/redo pointers to maintain the version chain\n4. Preserving the ability to undo back to the current version\n\nThe redo operation follows the doubly-linked list structure stored in the\nmixtape_snapshot table, where each version points to its undo/redo targets.\nRedo is only available after an undo operation and before any new edits.\n\nArgs:\n    public_id: The public identifier of the mixtape to redo\n    session: Database session with write access\n    authenticated_user: Optional authenticated user (required for private mixtapes)\n    spotify_client: Spotify client for enriching track details\n\nReturns:\n    MixtapeResponse: The restored mixtape with updated can_undo/can_redo flags\n\nRaises:\n    HTTPException 400: If the mixtape cannot be redone (no later version)\n    HTTPException 401: If the mixtape is private and user lacks authorization\n    HTTPException 404: If the mixtape doesn't exist\n    HTTPException 500: If the target version snapshot cannot be found",
                "operationId": "redo_mixtape_api_mixtape__public_id__redo_post",
                "parameters": [
                    {
                        "name": "public_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Public Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MixtapeResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/mixtape/{public_id}/spotify-export": {
            "post": {
                "tags": [
                    "mixtape"
                ],
                "summary": "Export To Spotify",
                "description": "Create or update a Spotify playlist that represents this mixtape.\n\nThe operation is idempotent \u2013 if a playlist URI is already recorded, the\nexisting playlist is updated. Otherwise a new playlist is created and the\nnewly generated Spotify playlist URI is persisted to the mixtape record.",
                "operationId": "export_to_spotify_api_mixtape__public_id__spotify_export_post",
                "parameters": [
                    {
                        "name": "public_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Public Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MixtapeResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/": {
            "get": {
                "summary": "Root",
                "operationId": "root_api__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/debug": {
            "get": {
                "summary": "Debug",
                "operationId": "debug_api_debug_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "MixtapeOverview": {
                "properties": {
                    "public_id": {
                        "type": "string",
                        "title": "Public Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "last_modified_time": {
                        "type": "string",
                        "title": "Last Modified Time"
                    }
                },
                "type": "object",
                "required": [
                    "public_id",
                    "name",
                    "last_modified_time"
                ],
                "title": "MixtapeOverview"
            },
            "MixtapeRequest": {
                "properties": {
                    "public_id": {
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "title": "Public Id",
                        "description": "Client-provided unique identifier for the mixtape"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "title": "Name",
                        "description": "Human-readable name of the mixtape"
                    },
                    "intro_text": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Intro Text",
                        "description": "Optional intro text"
                    },
                    "subtitle1": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 60
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Subtitle1",
                        "description": "First subtitle line (max 60 characters)"
                    },
                    "subtitle2": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 60
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Subtitle2",
                        "description": "Second subtitle line (max 60 characters)"
                    },
                    "subtitle3": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 60
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Subtitle3",
                        "description": "Third subtitle line (max 60 characters)"
                    },
                    "is_public": {
                        "type": "boolean",
                        "title": "Is Public",
                        "description": "Whether the mixtape is public",
                        "default": false
                    },
                    "tracks": {
                        "items": {
                            "$ref": "#/components/schemas/MixtapeTrackRequest"
                        },
                        "type": "array",
                        "title": "Tracks",
                        "description": "List of tracks in the mixtape"
                    }
                },
                "type": "object",
                "required": [
                    "public_id",
                    "name",
                    "tracks"
                ],
                "title": "MixtapeRequest"
            },
            "MixtapeResponse": {
                "properties": {
                    "public_id": {
                        "type": "string",
                        "title": "Public Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "intro_text": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Intro Text"
                    },
                    "subtitle1": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Subtitle1"
                    },
                    "subtitle2": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Subtitle2"
                    },
                    "subtitle3": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Subtitle3"
                    },
                    "is_public": {
                        "type": "boolean",
                        "title": "Is Public"
                    },
                    "create_time": {
                        "type": "string",
                        "title": "Create Time"
                    },
                    "last_modified_time": {
                        "type": "string",
                        "title": "Last Modified Time"
                    },
                    "stack_auth_user_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Stack Auth User Id"
                    },
                    "version": {
                        "type": "integer",
                        "title": "Version",
                        "description": "Current version number of the mixtape"
                    },
                    "spotify_playlist_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Spotify Playlist Url",
                        "description": "Spotify playlist URL if exported to Spotify"
                    },
                    "tracks": {
                        "items": {
                            "$ref": "#/components/schemas/MixtapeTrackResponse"
                        },
                        "type": "array",
                        "title": "Tracks"
                    },
                    "can_undo": {
                        "type": "boolean",
                        "title": "Can Undo",
                        "description": "Whether this mixtape can be undone"
                    },
                    "can_redo": {
                        "type": "boolean",
                        "title": "Can Redo",
                        "description": "Whether this mixtape can be redone"
                    }
                },
                "type": "object",
                "required": [
                    "public_id",
                    "name",
                    "intro_text",
                    "subtitle1",
                    "subtitle2",
                    "subtitle3",
                    "is_public",
                    "create_time",
                    "last_modified_time",
                    "stack_auth_user_id",
                    "version",
                    "tracks",
                    "can_undo",
                    "can_redo"
                ],
                "title": "MixtapeResponse"
            },
            "MixtapeTrackRequest": {
                "properties": {
                    "track_position": {
                        "type": "integer",
                        "exclusiveMinimum": 0.0,
                        "title": "Track Position",
                        "description": "Unique position of the track within the mixtape (1-based index)"
                    },
                    "track_text": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Track Text",
                        "description": "Optional text to display next to the track"
                    },
                    "spotify_uri": {
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "title": "Spotify Uri",
                        "description": "Spotify URI of the track"
                    }
                },
                "type": "object",
                "required": [
                    "track_position",
                    "spotify_uri"
                ],
                "title": "MixtapeTrackRequest"
            },
            "MixtapeTrackResponse": {
                "properties": {
                    "track_position": {
                        "type": "integer",
                        "exclusiveMinimum": 0.0,
                        "title": "Track Position",
                        "description": "Unique position of the track within the mixtape (1-based index)"
                    },
                    "track_text": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Track Text",
                        "description": "Optional text to display next to the track"
                    },
                    "track": {
                        "$ref": "#/components/schemas/TrackDetails",
                        "description": "Details about the track, such as name, artist, and Spotify URI."
                    }
                },
                "type": "object",
                "required": [
                    "track_position",
                    "track"
                ],
                "title": "MixtapeTrackResponse"
            },
            "TrackAlbum": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "images": {
                        "items": {
                            "$ref": "#/components/schemas/TrackAlbumImage"
                        },
                        "type": "array",
                        "title": "Images"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "images"
                ],
                "title": "TrackAlbum"
            },
            "TrackAlbumImage": {
                "properties": {
                    "url": {
                        "type": "string",
                        "title": "Url"
                    },
                    "width": {
                        "type": "integer",
                        "title": "Width"
                    },
                    "height": {
                        "type": "integer",
                        "title": "Height"
                    }
                },
                "type": "object",
                "required": [
                    "url",
                    "width",
                    "height"
                ],
                "title": "TrackAlbumImage"
            },
            "TrackArtist": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "TrackArtist"
            },
            "TrackDetails": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "artists": {
                        "items": {
                            "$ref": "#/components/schemas/TrackArtist"
                        },
                        "type": "array",
                        "title": "Artists"
                    },
                    "album": {
                        "$ref": "#/components/schemas/TrackAlbum"
                    },
                    "uri": {
                        "type": "string",
                        "title": "Uri"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "artists",
                    "album",
                    "uri"
                ],
                "title": "TrackDetails"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            }
        }
    }
}