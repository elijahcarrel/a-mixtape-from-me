import os
import sys
from dotenv import load_dotenv
from sqlmodel import SQLModel
from sqlalchemy import create_mock_engine

# Add the project root to the path
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

# Import models to ensure they're registered with SQLModel metadata
from backend.db_models import User, Mixtape, MixtapeAudit, MixtapeTrack, MixtapeAuditTrack

# Load environment variables from .env.local file in development.
if os.getenv('VERCEL_ENV') is None:
    load_dotenv('.env.local')

# Create app with production database
database_url = os.getenv('DATABASE_URL')
if database_url is None:
    raise Exception("missing DATABASE_URL")

with open('./schema.sql', 'w') as f:
    f.write("# Generated by generate_schema.py. Do not edit.\n")

    def metadata_dump(sql, *multiparams, **params):
        f.write(str(sql.compile(dialect=engine.dialect)))

    # Create a mock engine that captures SQL statements
    engine = create_mock_engine(database_url, metadata_dump)
    SQLModel.metadata.create_all(engine)
