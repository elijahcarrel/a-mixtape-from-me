name: CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  frontend-lint-and-typecheck:
    name: Front-End Lint & Type Check (Node.js)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Install dependencies
        run: npm ci
      - name: Run ESLint
        run: npm run lint
      - name: Type Check
        run: npx tsc --noEmit

  frontend-jest-tests:
    name: Front-End Jest Tests (Node.js)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Install dependencies
        run: npm install
      - name: Run Jest tests
        run: npm test 

  backend-pytest-tests:
    name: Backend Tests (Python)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-postgresql
      - name: Run Pytest
        run: pytest backend/tests
      # - name: Run Ruff (optional Python linter)
      #   run: ruff backend/
      # - name: Run Flake8 (optional Python linter)
      #   run: flake8 backend/ 

  validate-db-schema:
    name: Validate schema.sql Up-To-Date
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install sqlmodel sqlalchemy
      - name: Install Atlas
        run: |
          curl -sSf https://atlasgo.sh | sh
          echo "export PATH=\"$HOME/.atlas/bin:$PATH\"" >> $GITHUB_ENV
      - name: Generate new schema.sql
        run: |
          mkdir -p tmp
          python scripts/generate_schema.py --output tmp/generated_schema.sql
      - name: Compare checked-in schema.sql to generated schema.sql
        run: |
          output=$(atlas schema diff \
            --from file://$(pwd)/schema.sql \
            --to file://$(pwd)/tmp/generated_schema.sql \
            --dev-url "docker://postgres/15/dev")
          if [ "$output" != "Schemas are synced, no changes to be made." ]; then
            echo 'schema.sql is not up to date with the models. Please run scripts/generate_schema.py and commit the result.'
            echo "$output"
            exit 1
          fi 

  validate-openapi-schema:
    name: Validate openapi.yaml Up-To-Date
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install fastapi
      - name: Generate new openapi.yaml
        run: |
          mkdir -p tmp
          python scripts/generate_openapi_spec.py --output tmp/openapi.yaml
      - name: Compare checked-in openapi.yaml to generated openapi.yaml
        id: diff_state
        uses: swimmwatch/openapi-diff-action@v2.0.0
        with:
          old-spec: "openapi.yaml"
          new-spec: "tmp/openapi.yaml"
          json: "out.json"
          markdown: "out.md"
      - name: "Print difference state"
        run: |
          echo "Current state: ${{steps.diff_state.outputs.state}}."
      # - name: Run OpenAPI spec diff action
      #   uses: oasdiff/oasdiff-action/diff@main
      #   with:
      #     base: 'openapi.yaml'
      #     revision: 'tmp/openapi.yaml'
      #     fail-on-diff: true
      # - name: Test diff action output to file
      #   run: |
      #     if [ ! -s diff.txt ]; then
      #       echo "Diff file doesn't exist or is empty"
      #       exit 1
      #     fi
