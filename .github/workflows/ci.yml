name: CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  frontend-lint-and-typecheck:
    name: Lint & Type Check (Node.js)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Install dependencies
        run: npm ci
      - name: Run ESLint
        run: npm run lint
      - name: Type Check
        run: npx tsc --noEmit

  frontend-jest-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Install dependencies
        run: npm install
      - name: Run Jest tests
        run: npm test 

  backend-pytest-tests:
    name: Backend Tests (Python)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-postgresql
      - name: Run Pytest
        run: pytest backend/tests
      # - name: Run Ruff (optional Python linter)
      #   run: ruff backend/
      # - name: Run Flake8 (optional Python linter)
      #   run: flake8 backend/ 

  validate-schema:
    name: Validate schema.sql is up to date
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - name: Install Atlas
        run: |
          curl -sSf https://atlasgo.sh | sh
          echo "export PATH=\"$HOME/.atlas/bin:$PATH\"" >> $GITHUB_ENV
      - name: Generate new schema.sql
        run: |
          mkdir -p tmp/new_schema
          python scripts/generate_schema.py --output tmp/new_schema/schema.sql
      - name: Compare checked-in schema.sql to generated schema.sql
        env:
          ATLAS_DEV_URL: "docker://postgres/15/dev"
        run: |
          atlas schema diff \
            --from file://$(pwd)/schema.sql \
            --to file://$(pwd)/tmp/new_schema/schema.sql \
            --dev-url "$ATLAS_DEV_URL" > diff.txt
          if [ -s diff.txt ]; then
            echo 'schema.sql is not up to date with the models. Please run scripts/generate_schema.py and commit the result.'
            cat diff.txt
            exit 1
          fi 