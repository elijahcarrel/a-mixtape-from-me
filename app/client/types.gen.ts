// This file is auto-generated by @hey-api/openapi-ts

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * MixtapeRequest
 */
export type MixtapeRequest = {
    /**
     * Name
     * Human-readable name of the mixtape
     */
    name: string;
    /**
     * Intro Text
     * Optional intro text
     */
    intro_text?: string | null;
    /**
     * Is Public
     * Whether the mixtape is public
     */
    is_public?: boolean;
    /**
     * Tracks
     * List of tracks in the mixtape
     */
    tracks: Array<MixtapeTrackRequest>;
};

/**
 * MixtapeResponse
 */
export type MixtapeResponse = {
    /**
     * Public Id
     */
    public_id: string;
    /**
     * Name
     */
    name: string;
    /**
     * Intro Text
     */
    intro_text: string | null;
    /**
     * Is Public
     */
    is_public: boolean;
    /**
     * Create Time
     */
    create_time: string;
    /**
     * Last Modified Time
     */
    last_modified_time: string;
    /**
     * Stack Auth User Id
     */
    stack_auth_user_id: string | null;
    /**
     * Tracks
     */
    tracks: Array<MixtapeTrackResponse>;
};

/**
 * MixtapeTrackRequest
 */
export type MixtapeTrackRequest = {
    /**
     * Track Position
     * Unique position of the track within the mixtape (1-based index)
     */
    track_position: number;
    /**
     * Track Text
     * Optional text to display next to the track
     */
    track_text?: string | null;
    /**
     * Spotify Uri
     * Spotify URI of the track
     */
    spotify_uri: string;
};

/**
 * MixtapeTrackResponse
 */
export type MixtapeTrackResponse = {
    /**
     * Track Position
     * Unique position of the track within the mixtape (1-based index)
     */
    track_position: number;
    /**
     * Track Text
     * Optional text to display next to the track
     */
    track_text?: string | null;
    /**
     * Details about the track, such as name, artist, and Spotify URI.
     */
    track: TrackDetails;
};

/**
 * TrackAlbum
 */
export type TrackAlbum = {
    /**
     * Name
     */
    name: string;
    /**
     * Images
     */
    images: Array<TrackAlbumImage>;
};

/**
 * TrackAlbumImage
 */
export type TrackAlbumImage = {
    /**
     * Url
     */
    url: string;
    /**
     * Width
     */
    width: number;
    /**
     * Height
     */
    height: number;
};

/**
 * TrackArtist
 */
export type TrackArtist = {
    /**
     * Name
     */
    name: string;
};

/**
 * TrackDetails
 */
export type TrackDetails = {
    /**
     * Id
     */
    id: string;
    /**
     * Name
     */
    name: string;
    /**
     * Artists
     */
    artists: Array<TrackArtist>;
    album: TrackAlbum;
    /**
     * Uri
     */
    uri: string;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

export type GetCurrentUserApiMainAuthMeGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/main/auth/me';
};

export type GetCurrentUserApiMainAuthMeGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type LogoutApiMainAuthLogoutPostData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/main/auth/logout';
};

export type LogoutApiMainAuthLogoutPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type VerifyTokenApiMainAuthVerifyGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/main/auth/verify';
};

export type VerifyTokenApiMainAuthVerifyGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetAccountApiMainAccountMeGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/main/account/me';
};

export type GetAccountApiMainAccountMeGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetProfileApiMainAccountProfileGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/main/account/profile';
};

export type GetProfileApiMainAccountProfileGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type DbApiMainHealthDbGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/main/health/db';
};

export type DbApiMainHealthDbGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type AppHealthApiMainHealthAppGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/main/health/app';
};

export type AppHealthApiMainHealthAppGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type SearchTracksApiMainSpotifySearchGetData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Query
         */
        query: string;
    };
    url: '/api/main/spotify/search';
};

export type SearchTracksApiMainSpotifySearchGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type SearchTracksApiMainSpotifySearchGetError = SearchTracksApiMainSpotifySearchGetErrors[keyof SearchTracksApiMainSpotifySearchGetErrors];

export type SearchTracksApiMainSpotifySearchGetResponses = {
    /**
     * Response Search Tracks Api Main Spotify Search Get
     * Successful Response
     */
    200: Array<TrackDetails>;
};

export type SearchTracksApiMainSpotifySearchGetResponse = SearchTracksApiMainSpotifySearchGetResponses[keyof SearchTracksApiMainSpotifySearchGetResponses];

export type GetTrackApiMainSpotifyTrackTrackIdGetData = {
    body?: never;
    path: {
        /**
         * Track Id
         */
        track_id: string;
    };
    query?: never;
    url: '/api/main/spotify/track/{track_id}';
};

export type GetTrackApiMainSpotifyTrackTrackIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetTrackApiMainSpotifyTrackTrackIdGetError = GetTrackApiMainSpotifyTrackTrackIdGetErrors[keyof GetTrackApiMainSpotifyTrackTrackIdGetErrors];

export type GetTrackApiMainSpotifyTrackTrackIdGetResponses = {
    /**
     * Successful Response
     */
    200: TrackDetails;
};

export type GetTrackApiMainSpotifyTrackTrackIdGetResponse = GetTrackApiMainSpotifyTrackTrackIdGetResponses[keyof GetTrackApiMainSpotifyTrackTrackIdGetResponses];

export type ListMyMixtapesApiMainMixtapeGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Q
         * Search mixtape titles (partial match)
         */
        q?: string | null;
        /**
         * Limit
         * Max results to return
         */
        limit?: number;
        /**
         * Offset
         * Results offset for pagination
         */
        offset?: number;
    };
    url: '/api/main/mixtape/';
};

export type ListMyMixtapesApiMainMixtapeGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ListMyMixtapesApiMainMixtapeGetError = ListMyMixtapesApiMainMixtapeGetErrors[keyof ListMyMixtapesApiMainMixtapeGetErrors];

export type ListMyMixtapesApiMainMixtapeGetResponses = {
    /**
     * Response List My Mixtapes Api Main Mixtape  Get
     * Successful Response
     */
    200: Array<{
        [key: string]: unknown;
    }>;
};

export type ListMyMixtapesApiMainMixtapeGetResponse = ListMyMixtapesApiMainMixtapeGetResponses[keyof ListMyMixtapesApiMainMixtapeGetResponses];

export type CreateMixtapeApiMainMixtapePostData = {
    body: MixtapeRequest;
    path?: never;
    query?: never;
    url: '/api/main/mixtape/';
};

export type CreateMixtapeApiMainMixtapePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateMixtapeApiMainMixtapePostError = CreateMixtapeApiMainMixtapePostErrors[keyof CreateMixtapeApiMainMixtapePostErrors];

export type CreateMixtapeApiMainMixtapePostResponses = {
    /**
     * Response Create Mixtape Api Main Mixtape  Post
     * Successful Response
     */
    201: {
        [key: string]: unknown;
    };
};

export type CreateMixtapeApiMainMixtapePostResponse = CreateMixtapeApiMainMixtapePostResponses[keyof CreateMixtapeApiMainMixtapePostResponses];

export type ClaimMixtapeApiMainMixtapePublicIdClaimPostData = {
    body?: never;
    path: {
        /**
         * Public Id
         */
        public_id: string;
    };
    query?: never;
    url: '/api/main/mixtape/{public_id}/claim';
};

export type ClaimMixtapeApiMainMixtapePublicIdClaimPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ClaimMixtapeApiMainMixtapePublicIdClaimPostError = ClaimMixtapeApiMainMixtapePublicIdClaimPostErrors[keyof ClaimMixtapeApiMainMixtapePublicIdClaimPostErrors];

export type ClaimMixtapeApiMainMixtapePublicIdClaimPostResponses = {
    /**
     * Response Claim Mixtape Api Main Mixtape  Public Id  Claim Post
     * Successful Response
     */
    200: {
        [key: string]: unknown;
    };
};

export type ClaimMixtapeApiMainMixtapePublicIdClaimPostResponse = ClaimMixtapeApiMainMixtapePublicIdClaimPostResponses[keyof ClaimMixtapeApiMainMixtapePublicIdClaimPostResponses];

export type GetMixtapeApiMainMixtapePublicIdGetData = {
    body?: never;
    path: {
        /**
         * Public Id
         */
        public_id: string;
    };
    query?: never;
    url: '/api/main/mixtape/{public_id}';
};

export type GetMixtapeApiMainMixtapePublicIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetMixtapeApiMainMixtapePublicIdGetError = GetMixtapeApiMainMixtapePublicIdGetErrors[keyof GetMixtapeApiMainMixtapePublicIdGetErrors];

export type GetMixtapeApiMainMixtapePublicIdGetResponses = {
    /**
     * Successful Response
     */
    200: MixtapeResponse;
};

export type GetMixtapeApiMainMixtapePublicIdGetResponse = GetMixtapeApiMainMixtapePublicIdGetResponses[keyof GetMixtapeApiMainMixtapePublicIdGetResponses];

export type UpdateMixtapeApiMainMixtapePublicIdPutData = {
    body: MixtapeRequest;
    path: {
        /**
         * Public Id
         */
        public_id: string;
    };
    query?: never;
    url: '/api/main/mixtape/{public_id}';
};

export type UpdateMixtapeApiMainMixtapePublicIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateMixtapeApiMainMixtapePublicIdPutError = UpdateMixtapeApiMainMixtapePublicIdPutErrors[keyof UpdateMixtapeApiMainMixtapePublicIdPutErrors];

export type UpdateMixtapeApiMainMixtapePublicIdPutResponses = {
    /**
     * Response Update Mixtape Api Main Mixtape  Public Id  Put
     * Successful Response
     */
    200: {
        [key: string]: unknown;
    };
};

export type UpdateMixtapeApiMainMixtapePublicIdPutResponse = UpdateMixtapeApiMainMixtapePublicIdPutResponses[keyof UpdateMixtapeApiMainMixtapePublicIdPutResponses];

export type RootApiMainGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/main/';
};

export type RootApiMainGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type DebugApiMainDebugGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/main/debug';
};

export type DebugApiMainDebugGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ClientOptions = {
    baseUrl: `${string}://openapi.json` | (string & {});
};